name: Build and Release APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up JDK (Kotlin/Android requires JDK)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      # Step 3: Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          sdk-version: '30.0.3'

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          ./gradlew clean
          ./gradlew build

      # Step 5: Build APK file
      - name: Build APK
        run: |
          ./gradlew assembleRelease

      # Step 6: Upload APK to GitHub Release
      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  serve:
    runs-on: ubuntu-latest
    steps:
      # Step 7: Get latest release version and date
      - name: Fetch latest release details
        run: |
          latest_release=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          latest_version=$(echo $latest_release | jq -r '.tag_name')
          release_date=$(echo $latest_release | jq -r '.published_at')
          echo "Latest version: $latest_version"
          echo "Release date: $release_date"
        
      # Step 8: Generate JSON response
      - name: Generate JSON response
        run: |
          echo "{\"version\": \"$latest_version\", \"release_date\": \"$release_date\"}" > latest_release.json

      # Step 9: Upload generated JSON file to GitHub
      - name: Upload release metadata
        uses: actions/upload-artifact@v2
        with:
          name: latest_release
          path: latest_release.json
